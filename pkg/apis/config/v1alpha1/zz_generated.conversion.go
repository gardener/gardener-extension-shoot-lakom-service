//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// SPDX-FileCopyrightText: 2022 SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	config "github.com/gardener/gardener-extension-shoot-lakom-service/pkg/apis/config"
	apisconfig "github.com/gardener/gardener/extensions/pkg/apis/config"
	configv1alpha1 "github.com/gardener/gardener/extensions/pkg/apis/config/v1alpha1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Configuration)(nil), (*config.Configuration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Configuration_To_config_Configuration(a.(*Configuration), b.(*config.Configuration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.Configuration)(nil), (*Configuration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_Configuration_To_v1alpha1_Configuration(a.(*config.Configuration), b.(*Configuration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DebugConfig)(nil), (*config.DebugConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_DebugConfig_To_config_DebugConfig(a.(*DebugConfig), b.(*config.DebugConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.DebugConfig)(nil), (*DebugConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_DebugConfig_To_v1alpha1_DebugConfig(a.(*config.DebugConfig), b.(*DebugConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SeedBootstrap)(nil), (*config.SeedBootstrap)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SeedBootstrap_To_config_SeedBootstrap(a.(*SeedBootstrap), b.(*config.SeedBootstrap), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.SeedBootstrap)(nil), (*SeedBootstrap)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_SeedBootstrap_To_v1alpha1_SeedBootstrap(a.(*config.SeedBootstrap), b.(*SeedBootstrap), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Configuration_To_config_Configuration(in *Configuration, out *config.Configuration, s conversion.Scope) error {
	out.HealthCheckConfig = (*apisconfig.HealthCheckConfig)(unsafe.Pointer(in.HealthCheckConfig))
	out.CosignPublicKeys = *(*[]string)(unsafe.Pointer(&in.CosignPublicKeys))
	out.DebugConfig = (*config.DebugConfig)(unsafe.Pointer(in.DebugConfig))
	if err := Convert_v1alpha1_SeedBootstrap_To_config_SeedBootstrap(&in.SeedBootstrap, &out.SeedBootstrap, s); err != nil {
		return err
	}
	out.UseOnlyImagePullSecrets = in.UseOnlyImagePullSecrets
	out.AllowUntrustedImages = in.AllowUntrustedImages
	return nil
}

// Convert_v1alpha1_Configuration_To_config_Configuration is an autogenerated conversion function.
func Convert_v1alpha1_Configuration_To_config_Configuration(in *Configuration, out *config.Configuration, s conversion.Scope) error {
	return autoConvert_v1alpha1_Configuration_To_config_Configuration(in, out, s)
}

func autoConvert_config_Configuration_To_v1alpha1_Configuration(in *config.Configuration, out *Configuration, s conversion.Scope) error {
	out.HealthCheckConfig = (*configv1alpha1.HealthCheckConfig)(unsafe.Pointer(in.HealthCheckConfig))
	out.CosignPublicKeys = *(*[]string)(unsafe.Pointer(&in.CosignPublicKeys))
	out.DebugConfig = (*DebugConfig)(unsafe.Pointer(in.DebugConfig))
	if err := Convert_config_SeedBootstrap_To_v1alpha1_SeedBootstrap(&in.SeedBootstrap, &out.SeedBootstrap, s); err != nil {
		return err
	}
	out.UseOnlyImagePullSecrets = in.UseOnlyImagePullSecrets
	out.AllowUntrustedImages = in.AllowUntrustedImages
	return nil
}

// Convert_config_Configuration_To_v1alpha1_Configuration is an autogenerated conversion function.
func Convert_config_Configuration_To_v1alpha1_Configuration(in *config.Configuration, out *Configuration, s conversion.Scope) error {
	return autoConvert_config_Configuration_To_v1alpha1_Configuration(in, out, s)
}

func autoConvert_v1alpha1_DebugConfig_To_config_DebugConfig(in *DebugConfig, out *config.DebugConfig, s conversion.Scope) error {
	out.EnableProfiling = in.EnableProfiling
	out.EnableContentionProfiling = in.EnableContentionProfiling
	return nil
}

// Convert_v1alpha1_DebugConfig_To_config_DebugConfig is an autogenerated conversion function.
func Convert_v1alpha1_DebugConfig_To_config_DebugConfig(in *DebugConfig, out *config.DebugConfig, s conversion.Scope) error {
	return autoConvert_v1alpha1_DebugConfig_To_config_DebugConfig(in, out, s)
}

func autoConvert_config_DebugConfig_To_v1alpha1_DebugConfig(in *config.DebugConfig, out *DebugConfig, s conversion.Scope) error {
	out.EnableProfiling = in.EnableProfiling
	out.EnableContentionProfiling = in.EnableContentionProfiling
	return nil
}

// Convert_config_DebugConfig_To_v1alpha1_DebugConfig is an autogenerated conversion function.
func Convert_config_DebugConfig_To_v1alpha1_DebugConfig(in *config.DebugConfig, out *DebugConfig, s conversion.Scope) error {
	return autoConvert_config_DebugConfig_To_v1alpha1_DebugConfig(in, out, s)
}

func autoConvert_v1alpha1_SeedBootstrap_To_config_SeedBootstrap(in *SeedBootstrap, out *config.SeedBootstrap, s conversion.Scope) error {
	out.OwnerNamespace = in.OwnerNamespace
	return nil
}

// Convert_v1alpha1_SeedBootstrap_To_config_SeedBootstrap is an autogenerated conversion function.
func Convert_v1alpha1_SeedBootstrap_To_config_SeedBootstrap(in *SeedBootstrap, out *config.SeedBootstrap, s conversion.Scope) error {
	return autoConvert_v1alpha1_SeedBootstrap_To_config_SeedBootstrap(in, out, s)
}

func autoConvert_config_SeedBootstrap_To_v1alpha1_SeedBootstrap(in *config.SeedBootstrap, out *SeedBootstrap, s conversion.Scope) error {
	out.OwnerNamespace = in.OwnerNamespace
	return nil
}

// Convert_config_SeedBootstrap_To_v1alpha1_SeedBootstrap is an autogenerated conversion function.
func Convert_config_SeedBootstrap_To_v1alpha1_SeedBootstrap(in *config.SeedBootstrap, out *SeedBootstrap, s conversion.Scope) error {
	return autoConvert_config_SeedBootstrap_To_v1alpha1_SeedBootstrap(in, out, s)
}

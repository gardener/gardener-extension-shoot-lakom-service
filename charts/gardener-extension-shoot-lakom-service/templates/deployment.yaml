# SPDX-FileCopyrightText: 2022 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gardener-extension-{{ .Values.serviceName }}
  namespace: {{ .Release.Namespace }}
{{- if .Values.ignoreResources }}
  annotations:
    resources.gardener.cloud/ignore: "true"
{{- end }}
  labels:
    app.kubernetes.io/name: gardener-extension-{{ .Values.serviceName }}
    helm.sh/chart: gardener-extension-{{ .Values.serviceName }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    high-availability-config.resources.gardener.cloud/type: controller
spec:
  revisionHistoryLimit: 5
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: gardener-extension-{{ .Values.serviceName }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        prometheus.io/name: {{ .Release.Name | quote }}
        prometheus.io/port: {{ .Values.controllers.metricsPort | quote }}
        prometheus.io/scrape: "true"
        checksum/configmap-extension-config: {{ include (print $.Template.BasePath "/configmap-extension-config.yaml") . | sha256sum }}
      {{- if .Values.imageVectorOverwrite }}
        checksum/configmap-extension-imagevector-overwrite: {{ include (print $.Template.BasePath "/configmap-imagevector-overwrite.yaml") . | sha256sum }}
      {{- end }}
      labels:
        app.kubernetes.io/name: gardener-extension-{{ .Values.serviceName }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        networking.gardener.cloud/to-runtime-apiserver: allowed
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-blocked-cidrs: allowed
    spec:
      {{- if gt (int .Values.replicaCount) 1 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - gardener-extension-{{ .Values.serviceName }}
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
      priorityClassName: gardener-system-900
      serviceAccountName: gardener-extension-{{ .Values.serviceName }}
      securityContext:
        runAsNonRoot: true
        allowPrivilegeEscalation: false
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: gardener-extension-{{ .Values.serviceName }}
        image: {{ include "image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
        args:
        - --config=/etc/lakom-service/config.yaml
        - --lifecycle-max-concurrent-reconciles={{ .Values.controllers.lifecycle.concurrentSyncs }}
        - --healthcheck-max-concurrent-reconciles={{ .Values.controllers.healthcheck.concurrentSyncs }}
        - --ignore-operation-annotation={{ .Values.controllers.ignoreOperationAnnotation }}
        - --leader-election-id={{ include "leaderelectionid" . }}
        - --heartbeat-namespace={{ .Release.Namespace }}
        - --heartbeat-renew-interval-seconds={{ .Values.controllers.heartbeat.renewIntervalSeconds }}
        - --health-bind-address=:{{ .Values.controllers.healthPort }}
        - --metrics-bind-address=:{{ .Values.controllers.metricsPort }}
        ports:
        - containerPort: {{ .Values.controllers.metricsPort }}
          name: metrics
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.controllers.healthPort }}
            scheme: HTTP
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: /readyz
            port: {{ .Values.controllers.healthPort }}
            scheme: HTTP
          initialDelaySeconds: 5
        env:
        - name: LEADER_ELECTION_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- if .Values.imageVectorOverwrite }}
        - name: IMAGEVECTOR_OVERWRITE
          value: /charts_overwrite/images_overwrite.yaml
        {{- end }}
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | trim | indent 10 }}
        {{- end }}
        volumeMounts:
        - name: lakom-service-config
          mountPath: /etc/lakom-service
          readOnly: true
        {{- if .Values.imageVectorOverwrite }}
        - name: extension-imagevector-overwrite
          mountPath: /charts_overwrite/
          readOnly: true
        {{- end }}
      volumes:
      - name: lakom-service-config
        configMap:
          name: extension-shoot-lakom-service.config
          items:
            - key: config.yaml
              path: config.yaml
      {{- if .Values.imageVectorOverwrite }}
      - name: extension-imagevector-overwrite
        configMap:
          name: gardener-extension-{{ .Values.serviceName }}-imagevector-overwrite
          defaultMode: 420
      {{- end }}
